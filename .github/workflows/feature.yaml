name: ntx-feature-workflow

on:
  push:
    branches:
      - "feature"
env:
  APP_TAG: ${{ github.run_id }}
  GCP_REGISTRY: "asia-southeast1-docker.pkg.dev/charged-kiln-460511-p8/ntx-devops-test"
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        #Inform a working directory if .tf files are not in root folder
        working-directory: ./terraform 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Setup terraform variables
      id: vars
      run: |-
        cat > pipeline.auto.tfvars <<EOF
        region="${{ vars.GCP_REGION }}"
        project="${{ vars.GCP_PROJECT_ID }}"
        repo_id="${{ vars.GCP_REPO_ID }}"
        repo_format="${{ vars.GCP_REPO_FORMAT }}"
        image_name="ntx-app"
        image_tag="${{ github.ref_name }}"
        EOF
        
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.NTX_GCP_SA }} 


    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.NTX_GCP_SA }}

      # On push to "feature", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/feature' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.NTX_GCP_SA }}
  
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.NTX_GCP_SA }}"
      - name: Build Docker Image
        run: |
          docker build -t $GCP_REGISTRY:$APP_TAG .
      - name: Check Docker Image
        run: |
          docker images
      - name: "Artifact Registry auth"
        run: gcloud auth configure-docker asia-southeast1-docker.pkg.dev
      - name: Publish to GCR
        run: |
          docker push "$GCP_REGISTRY:$APP_TAG"